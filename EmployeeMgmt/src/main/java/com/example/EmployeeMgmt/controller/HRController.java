package com.example.EmployeeMgmt.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.EmployeeMgmt.Exception.EmployeeNotFoundException;
import com.example.EmployeeMgmt.Exception.RecordNotFoundException;
import com.example.EmployeeMgmt.model.Employee;
import com.example.EmployeeMgmt.model.EmployeeHrRequest;
import com.example.EmployeeMgmt.model.HR;
import com.example.EmployeeMgmt.service.HRService;

@RestController
@RequestMapping("HR")
public class HRController {
    @Autowired
    private HRService serve;

    //Home page
    @RequestMapping("/")
    String HRhome() {
        return "Welcome to HR Home Page";
    }

    //Deletes all data from Employee data bases
    @DeleteMapping("/dev/ResetAll")
    public void reset() {
        serve.reset();
    }

    //To test HR functions
    @GetMapping("/dev/testStore")
    public List<HR> HRtest() {
        serve.testSaveLeaveEmp();
        serve.testSaveEmp();
        serve.testAddHr();
        serve.testSaveEmpInfo();
        return serve.getHr();
    }

    //To list details of all employees
    @GetMapping("/GetEmployees")
    public List<Employee> viewAllEmployees() {
        return serve.viewAllEmployees();
    }

    //To list details of an employee by ID
    @GetMapping("/GetEmployees/{emp_id}")
    public Employee viewAllEmployees(@PathVariable("emp_id") String id) throws EmployeeNotFoundException {
        return serve.viewEmployeeById(id);
    }

    //To process leave application by empId
    @GetMapping("/{HR_id}/ValidateLeave/{emp_id}")
    String validateLeave(@PathVariable("HR_id") String HR_id, @PathVariable("emp_id") String id) throws RecordNotFoundException, EmployeeNotFoundException {
        return serve.validateLeave(HR_id, id);
    }

    //To get all data update requests by HR ID
    @GetMapping("/{HR_id}/getAllEmpHrRequests")
    List<EmployeeHrRequest> viewAllEmpHrRequests() {
        return serve.viewAllEmpHrReqs();
    }

    //To process data updation requests by HR of an Employee
    @GetMapping("/{HR_id}/validateEmpReqInfo/{emp_id}")
    String validateEmpReqInfo(@PathVariable("HR_id") String HR_id, @PathVariable("emp_id") String emp_id) throws EmployeeNotFoundException {
        return serve.ValidateEmpChangeInfo(HR_id, emp_id);
    }

    //To view leave requests sent to HR
    @GetMapping("/{HR_id}/GetLeaves")
    List<com.example.EmployeeMgmt.model.EmployeeLeaveRequest> viewLeaveApplication(@PathVariable("HR_id") String HR_id) {
        return serve.viewLeaveReqApplicationByHrId(HR_id);
    }

    //To view leave requests sent to HR by particular Employee
    @GetMapping("/{HR_id}/GetLeaves/{emp_id}")
    com.example.EmployeeMgmt.model.EmployeeLeaveRequest viewLeaveApplicationByEmpid(@PathVariable("HR_id") String HR_id, @PathVariable("emp_id") String id) throws RecordNotFoundException {
        return serve.viewLeaveReqApplicationByHrAndEmpId(HR_id, id);
    }

    //To generate progress report of an Employee
    @PostMapping("/{HR_id}/GenProgressReports/{emp_id}")
    String GenerateProgressReports(@PathVariable("HR_id") String HR_id, @PathVariable("emp_id") String id) throws EmployeeNotFoundException {
        return serve.genProgressReport(HR_id, id);
	//	return "This is Progress Report of \n"+"Employee :"+id+"\nGenerated by "+HR_id;
    }
}
